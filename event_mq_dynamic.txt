proc sql;
create table all_eerbl_60d_imb as select distinct a.*, b.bas1, b.bas2, b.bas3, b.bas4, b.bas5, b.vol as bas6, b.depth1_adj as bas7, b.depth2_adj as bas8, b.buy as bas9, b.sell as bas10
from broker.all_eerbl_60d_imb a left join broker.stk_vol b
on a.stock_code_1=b.code and a.date=b.qdate
order by stock_code_1, event_date,time_trade;
run; 


/*
proc sql;
create table all_eerbl_60d_imb as select distinct a.*
,b.bas1_adj as bas1
,b.bas2_adj as bas2
,b.bas3_adj as bas3
,b.bas4_adj as bas4
,b.bas5_adj as bas5
,b.vol_adj as bas6, b.depth1_adj as bas7, b.depth2_adj as bas8
from broker.all_eerbl_60d_imb a left join broker.stk_vol_adj b
on a.stock_code_1=b.code and a.date=b.qdate
order by stock_code_1, event_date,time_trade;
run; 
*/

%let start=0;
%let end=1;
%let pre=-10;

%macro event(event);

proc sql;
create table &event._60d_imb as select distinct a.* from all_eerbl_60d_imb a,broker.all_eerbl b
where a.stock_code_1=b.stock_code_1 and a.event_date=b.event_date and b.&event.=1;
quit;

proc sql;
create table imb_b5 as select distinct stock_code_1,event_date
,sum(all_imb_adj) as all_imbb10
,mean(bas1) as bas1_b
,mean(bas2) as bas2_b
,mean(bas3) as bas3_b
,mean(bas4) as bas4_b
,mean(bas5) as bas5_b
,mean(bas6) as bas6_b
,mean(bas7) as bas7_b
,mean(bas8) as bas8_b
,mean(bas9) as bas9_b
,mean(bas10) as bas10_b
from &event._60d_imb
where time_trade<=-6 and time_trade>=-10
group by stock_code_1,event_date;
quit;

proc sql;
create table bas_b5 as select distinct stock_code_1,event_date

,mean(bas1) as bas1_a
,mean(bas2) as bas2_a
,mean(bas3) as bas3_a
,mean(bas4) as bas4_a
,mean(bas5) as bas5_a
,mean(bas6) as bas6_a
,mean(bas7) as bas7_a
,mean(bas8) as bas8_a
,mean(bas9) as bas9_a
,mean(bas10) as bas10_a

from &event._60d_imb
where time_trade<=-1 and time_trade>=-5
group by stock_code_1,event_date;
quit;


proc sql;
create table sca_b5 as select distinct stock_code_1,event_date

,mean(bas1) as bas1_c
,mean(bas2) as bas2_c
,mean(bas3) as bas3_c
,mean(bas4) as bas4_c
,mean(bas5) as bas5_c
,mean(bas6) as bas6_c
,mean(bas7) as bas7_c
,mean(bas8) as bas8_c
,mean(bas9) as bas9_c
,mean(bas10) as bas10_c

from &event._60d_imb
where time_trade<=-1 and time_trade>=-10
group by stock_code_1,event_date;
quit;

data sort_inv_&event;
length event $20.;
length quintile $20.;
event='';
quintile='';
run;

data imb_CAR;
merge imb_b5 bas_b5 sca_b5;
by stock_code_1 event_date;
run;

data imb_CAR;
set imb_CAR;
bas1=(bas1_a-bas1_b)/bas1_c;
bas2=(bas2_a-bas2_b)/bas2_c;
bas3=(bas3_a-bas3_b)/bas3_c;
bas4=(bas4_a-bas4_b)/bas4_c;
bas5=(bas5_a-bas5_b)/bas5_c;
bas6=(bas6_a-bas6_b)/bas6_c;
bas7=(bas7_a-bas7_b)/bas7_c;
bas8=(bas8_a-bas8_b)/bas8_c;
bas9=(bas9_a-bas9_b)/bas9_c;
bas10=(bas10_a-bas10_b)/bas10_c;
drop bas1_a bas2_a bas3_a bas4_a bas5_a bas6_a bas7_a bas8_a bas9_a bas10_a bas1_b bas2_b bas3_b bas4_b bas5_b bas6_b bas7_b bas8_b bas9_b bas10_b bas1_c bas2_c bas3_c bas4_c bas5_c bas6_c bas7_c bas8_c bas9_c bas10_c;
run;

%macro sort(inv);
proc sql;
create table imb_CAR1 as select * from imb_CAR
where &inv._imbb10^=. and &inv._imbb10^=0;
quit;


proc sort;
by &inv._imbb10;
run;

data _null_;
       set imb_car1 nobs=t;
       call symput("size",t);
       stop;
run;


data imb_car1;
set imb_car1;
if _n_<=&size./5 then quintile=1;
if _n_>&size./5 and _n_<=&size./5*2 then quintile=2;
if _n_>&size./5*2 and _n_<= &size./5*3 then quintile=3;
if _n_>&size./5*3 and _n_<=&size./5*4 then quintile=4;
if _n_>&size./5*4 and _n_<=&size. then quintile=5;
run;

data imb_car1;
set imb_car1;
cluster1=week(event_date)+(year(event_date)-2007)*100;
cluster2=week(event_date)+(year(event_date)-2007)*100;
cluster3=month(event_date)+(year(event_date)-2007)*100;
cluster4=month(event_date)+(year(event_date)-2007)*100;
cluster5=qtr(event_date)+(year(event_date)-2007)*100;
cluster6=qtr(event_date)+(year(event_date)-2007)*100;
if quintile=3 then Q5=0;
if quintile=5 then Q5=1;
if quintile=3 then Q1=0;
if quintile=1 then Q1=1;
run;

data Q3_5;
set imb_car1;
if Quintile=3 or Quintile=5;
run;

data Q3_1;
set imb_car1;
if Quintile=3 or Quintile=1;
run;

%macro CAR(n);
ODS output Parameterestimates=temp1;
proc surveyreg data=imb_car1;
by quintile;
model bas&n.=;
cluster cluster3;
run;
ODS output close;

ODS output Parameterestimates=temp2;
proc surveyreg data=Q3_5;
model bas&n.=Q5;
cluster cluster3;
run;
ODS output close;

data temp2;
set temp2;
if _n_=1 then delete;
quintile=6;
run;

ODS output Parameterestimates=temp2_5;
proc surveyreg data=Q3_1;
model bas&n.=Q1;
cluster cluster3;
run;
ODS output close;

data temp2_5;
set temp2_5;
if _n_=1 then delete;
quintile=7;
run;

data temp3_&n.;
set temp1 temp2 temp2_5;
rename estimate=bas&n._mean tvalue=bas&n._t;
keep quintile estimate tValue;
run;

%mend CAR;

%CAR(1);%CAR(2);%CAR(3);%CAR(4);%CAR(5);%CAR(6);%CAR(7);%CAR(8);%CAR(9);%CAR(10);

data temp3;
merge temp3_1 temp3_2 temp3_3 temp3_4 temp3_5 temp3_6 temp3_7 temp3_8 temp3_9 temp3_10;
by quintile;
if _n_<6 then group=cats("&inv",'_',quintile);
if _n_=6 then group=cats("&inv",'_diff1');
if _n_=7 then group=cats("&inv",'_diff2');
drop quintile;
rename group=quintile;
run;

data sort_inv_&event.;
set sort_inv_&event. temp3;
run;
%mend sort;

%sort(all);


data sort_inv_&event.;
set sort_inv_&event.;
if quintile^='';
event="&event.";
run;

%mend event;

%event(earning);
%event(earning_forecast);
%event(restructure);
%event(bankloan);
%event(lawsuit);
%event(suspension);
%event(governor);
%event(all);

data indivi_sort;
set sort_inv_all sort_inv_earning sort_inv_earning_forecast sort_inv_restructure sort_inv_bankloan sort_inv_lawsuit sort_inv_suspension sort_inv_governor;
run;
